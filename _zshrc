export LANG=ja_JP.UTF-8
HISTFILE=$HOME/.zsh-history
HISTSIZE=100000
SAVEHIST=100000

#基本設定#{{{

## 補完機能の強化
autoload -U compinit

## コアダンプサイズを制限
limit coredumpsize 102400

### 出力の文字列末尾に改行コードが無い場合でも表示
#unsetopt promptcr

## 色を使う
setopt prompt_subst
autoload -Uz colors
colors

## ビープを鳴らさない
setopt nobeep

## 内部コマンド jobs の出力をデフォルトで jobs -l にする
setopt long_list_jobs

## 補完候補一覧でファイルの種別をマーク表示
setopt list_types

## サスペンド中のプロセスと同じコマンド名を実行した場合はリジューム
setopt auto_resume

## 補完候補を一覧表示
setopt auto_list

## 直前と同じコマンドをヒストリに追加しない
setopt hist_ignore_dups

## cd 時に自動で push
setopt autopushd

## 同じディレクトリを pushd しない
setopt pushd_ignore_dups

## ファイル名で #, ~, ^ の 3 文字を正規表現として扱う
setopt extended_glob

## TAB で順に補完候補を切り替える
setopt auto_menu

## zsh の開始, 終了時刻をヒストリファイルに書き込む
setopt extended_history

## =command を command のパス名に展開する
setopt equals

## --prefix=/usr などの = 以降も補完
setopt magic_equal_subst

## ヒストリを呼び出してから実行する間に一旦編集
setopt hist_verify

# ファイル名の展開で辞書順ではなく数値的にソート
setopt numeric_glob_sort

## 出力時8ビットを通す
setopt print_eight_bit

## ヒストリを共有
setopt share_history

## 補完候補のカーソル選択を有効に
zstyle ':completion:*:default' menu select=1

## 補完候補の色づけ
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

## ディレクトリ名だけで cd
setopt auto_cd

## カッコの対応などを自動的に補完
setopt auto_param_keys

## ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
setopt auto_param_slash

## スペルチェック
setopt correct
#}}}

# 基本色設定#{{{
#local GREEN=$'%{\e[1;32m%}'
#local YELLOW=$'%{\e[1;33m%}'
#local BLUE=$'%{\e[1;34m%}'
#local DEFAULT=$'%{\e[1;m%}'
#}}}

# 環境別条件分岐設定#{{{
which-s() { whence -p ${1+"$1"} >/dev/null; }
if which-s sysctl; then

  if [ -n "${SSH_CONNECTION}" ]; then
    # SSH接続を行っている場合
    export TERM=screen-256color

    precmd () {
      PROMPT=$'%{\e[1;31m%}%m%{\e[5;34m%}:%{\e[0;4;36m%}%n%{\e[m%} %{\e[0;33m%}('$(sysctl -n vm.loadavg | perl -anpe '$_=$F[1]')$') %{\e[1;35m%}<-%{\e[m%} '
    }
    RPROMPT=$'%{\e[32m%}%/%{\e[m%}'

  else

    case ${UID} in
      0)
        # ROOT権限ユーザの場合
        precmd () {
          PROMPT=$'%{\e[1;31m%}%m%{\e[5;34m%}:%{\e[0;4;36m%}%n%{\e[m%} %{\e[0;33m%}('$(sysctl -n vm.loadavg | perl -anpe '$_=$F[1]')$') %{\e[1;35m%}<-%{\e[m%} '
        }
        RPROMPT=$'%{\e[32m%}%/%{\e[m%}'
        ;;
      *)
        # ROOTでなく，かつSSH接続をしていない場合
        precmd () {
          # PROMPT=$'%{\e[0;33m%}%* ('$(sysctl -n vm.loadavg | perl -anpe '$_=$F[1]')$') %%%{\e[m%} '
          PROMPT=$'%{\e[0;32m%}%m%{\e[1;5;34m%}:%{\e[0;36m%}%n %{\e[0;33m%}('$(sysctl -n vm.loadavg | perl -anpe '$_=$F[1]')$') %{\e[1;35m%}<-%{\e[m%} '
        }
        RPROMPT=$'%{\e[32m%}%/%{\e[m%}'
        ;;
    esac

  fi

  alias ls="ls -G"
  alias sl="ls -lawG"

else

  export TERM=xterm-256color
  precmd () {
    PROMPT=$'%{\e[0;1;31m%}%m%{\e[5;1;34m%}:%{\e[0;36m%}%n %{\e[1;35m%}<-%{\e[m%} '
  }
  RPROMPT=$'%{\e[32m%}%/%{\e[m%}'

  alias ls="ls --color=always"
  alias sl="ls --color=always -la"

fi
## PROMPT=$'\n'$GREEN'${USER}@${HOSTNAME} '$YELLOW'%~ '$'\n'$DEFAULT'%(!.#.$) '
## PROMPT="%{$fg[red]%}MBA%{$fg[white]%}:%{$fg[green]%}%n%{$fg[white]%}:%{$fg[blue]%}%~%{$fg[white]%}$%{$reset_color%} "

#}}}

# zsh機能#{{{
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data
# autoload predict-on
setopt auto_cd
setopt auto_pushd
setopt correct
#}}}

# PATH設定#{{{
export PATH=/usr/local/mysql/bin:/opt/local/bin:/opt/local/sbin:/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/:/usr/local/bin:~/bin:$PATH
export MANPATH=$MANPATH:/opt/local/share/man:/usr/share/man/
#}}}

# virtualenv# {{{
export WORKON_HOME=$HOME/.virtualenvs
if which-s virtualenvwrapper.sh; then
  source `which virtualenvwrapper.sh`
fi
# }}}

# 色適用#{{{
zstyle ':completion:*' list-colors 'di=36' 'ln=35'
zstyle ':completion:*:default' menu select=1

export LSCOLORS=gxfxcxdxbxegedabagacad
# export LSCOLORS=gxfxxxxxcxxxxxxxxxxxxx
#}}}

# Start tmux on every shell login#{{{
#https://wiki.archlinux.org/index.php/Tmux#Start_tmux_on_every_shell_login
if which tmux 2>&1 >/dev/null; then
  #if not inside a tmux session, and if no session is started, start a new session
  test -z "$TMUX" && (tmux attach || tmux new-session)
fi
#}}}

# エイリアス# {{{
alias tmux="tmux -2"
alias vim='vim --servername VIM'
alias ta="tmux attach"
#alias ipython="ipython-2.7"
alias vp='vim -c "call VimpressSetting()"'
# }}}

# 外部プラグイン読み込み# {{{
# incrimental fast prdiction
source ~/dotfiles/.zsh/plugin/incr*.zsh
# }}}
